# Inventory dictionary to store products
inventory = {}

# Function to add a product to the inventory
def add_product():
    """
    Prompts user to enter product details and adds the product to the inventory.
    """
    name = input("Enter product name: ")
    try:
        price = float(input("Enter product price: "))
        quantity = int(input("Enter product quantity: "))
        if price <= 0 or quantity < 0:
            print("Price must be positive and quantity must be non-negative.")
            return
        inventory[name] = {'price': price, 'quantity': quantity}
        print(f"Product '{name}' added successfully.")
    except ValueError:
        print("Invalid input. Price must be a number and quantity must be an integer.")

# Function to search for a product in the inventory
def search_product():
    """
    Prompts user to enter a product name and displays its details if found.
    """
    name = input("Enter product name to search: ")
    if name in inventory:
        product = inventory[name]
        print(f"Product: {name}, Price: ${product['price']:.2f}, Quantity: {product['quantity']}")
    else:
        print(f"Product '{name}' not found in inventory.")

# Function to update the price of a product
def update_price():
    """
    Prompts user to enter a product name and a new price, and updates it if valid.
    """
    name = input("Enter product name to update price: ")
    if name in inventory:
        try:
            new_price = float(input("Enter new price: "))
            if new_price > 0:
                inventory[name]['price'] = new_price
                print(f"Price of '{name}' updated to ${new_price:.2f}.")
            else:
                print("Invalid price. Price must be a positive number.")
        except ValueError:
            print("Invalid input. Price must be a number.")
    else:
        print(f"Product '{name}' not found in inventory.")

# Function to delete a product from the inventory
def delete_product():
    """
    Prompts user to enter a product name and deletes it if it exists.
    """
    name = input("Enter product name to delete: ")
    if name in inventory:
        del inventory[name]
        print(f"Product '{name}' has been removed from inventory.")
    else:
        print(f"Product '{name}' does not exist in inventory.")

# Function to calculate the total inventory value
def calculate_total_value():
    """
    Calculates and displays the total value of the inventory.
    """
    total = sum(product['price'] * product['quantity'] for product in inventory.values())
    print(f"Total inventory value: ${total:.2f}")

# Function to display the menu
def display_menu():
    """
    Displays the main menu with options.
    """
    print("\n--- Inventory Management Menu ---")
    print("1. Add Product")
    print("2. Search Product")
    print("3. Update Product Price")
    print("4. Delete Product")
    print("5. Calculate Total Inventory Value")
    print("6. Exit")

# Function to preload initial products
def preload_products():
    """
    Loads at least 5 initial products into the inventory.
    """
    inventory.update({
        "Laptop": {"price": 1200.00, "quantity": 3},
        "Mouse": {"price": 25.50, "quantity": 10},
        "Keyboard": {"price": 55.99, "quantity": 5},
        "Monitor": {"price": 199.99, "quantity": 4},
        "USB Cable": {"price": 9.99, "quantity": 15}
    })
    print("Initial products loaded into inventory.")

# Main program loop
def main():
    """
    Main function to run the inventory management system.
    """
    preload_products()
    while True:
        display_menu()
        choice = input("Select an option (1-6): ")
        if choice == '1':
            add_product()
        elif choice == '2':
            search_product()
        elif choice == '3':
            update_price()
        elif choice == '4':
            delete_product()
        elif choice == '5':
            calculate_total_value()
        elif choice == '6':
            print("Exiting inventory management system.")
            break
        else:
            print("Invalid choice. Please select a valid option.")

# Run the program
if __name__ == "__main__":
    main()
